require 'net/http'
require 'uri'


class VideosController < ApplicationController
  # GET /videos
  # GET /videos.xml
  def index
    @videos = Video.all

    respond_to do |format|
      format.html # index.html.erb
      format.xml  { render :xml => @videos }
    end
  end

  # GET /videos/1
  # GET /videos/1.xml
  def show
    @video = Video.find(params[:id])

    respond_to do |format|
      format.html # show.html.erb
      format.xml  { render :xml => @video }
    end
  end

  # GET /videos/new
  # GET /videos/new.xml
  def new
    @video = Video.new
    url = params[:url]
    vidoeID = ""
    
    type = params[:type]
    if type == "youtube"
	leftIndex = url.rfind("/")
	rightIndex = url.find("&")
	videoID = url[leftIndex,rightIndex]i
	thumbnailURL = "http://img.youtube.com/vi/"+videoID+"/default.jpg"
	Video.new({"swf" => url, "height" => params[:height],"width" => params[:width], "thumbnail" => thumbnailURL, "videoID" => videoID })
    end
    elsif type == "vimeo"

	leftIndex = url.find("clip_id")
	rightIndex = url.find("&",leftIndex)
	videoID = url[leftIndex,rightIndex]
	url = URI.parse('http://www.example.com/index.html')
    	req = Net::HTTP::Get.new(url.path)
    	res = Net::HTTP.start(url.host, url.port) {|http|
     	 http.request(req)
    	}
	vimeoInfo = Hash.from_xml(res)
	thumbnailURL = (vimeoInfo[:videos][:video].last)["thumbnail_small"]

        Video.new({"swf" => url, "height" => params[:height],"width" => params[:width], "thumbnail" => thumbnailURL, "videoID" => videoID })
    end 

    respond_to do |format|
      format.html # new.html.erb
      format.xml  { render :xml => @video }
    end
  end

  # GET /videos/1/edit
  def edit
    @video = Video.find(params[:id])
  end

  # POST /videos
  # POST /videos.xml
  def create
    @video = Video.new(params[:video])

    respond_to do |format|
      if @video.save
        flash[:notice] = 'Video was successfully created.'
        format.html { redirect_to(@video) }
        format.xml  { render :xml => @video, :status => :created, :location => @video }
      else
        format.html { render :action => "new" }
        format.xml  { render :xml => @video.errors, :status => :unprocessable_entity }
      end
    end
  end

  # PUT /videos/1
  # PUT /videos/1.xml
  def update
    @video = Video.find(params[:id])

    respond_to do |format|
      if @video.update_attributes(params[:video])
        flash[:notice] = 'Video was successfully updated.'
        format.html { redirect_to(@video) }
        format.xml  { head :ok }
      else
        format.html { render :action => "edit" }
        format.xml  { render :xml => @video.errors, :status => :unprocessable_entity }
      end
    end
  end

  # DELETE /videos/1
  # DELETE /videos/1.xml
  def destroy
    @video = Video.find(params[:id])
    @video.destroy

    respond_to do |format|
      format.html { redirect_to(videos_url) }
      format.xml  { head :ok }
    end
  end
end
